def server
def rtGeneric

 node {
    try{
    checkout scm
 //    stage ('Artifactory configuration') {
 //           server = "artifactory-tlv",
 //           rtGeneric = "https://artifactorytlv.jfrog.io/",
 //   }
    
    stage('build'){
    def testImage = docker.build(
        "testimage",
        "./Dockerfile",
        "--build-arg version=1.2.0"
    )

    testImage.inside('-v /tmp:/tmp') {
        sh 'python3 src/zip_job.py'
        sh 'cp src/*.zip /tmp'
    }

    }
    
    stage('Deploy') {
		    sh 'ls /tmp'
		    jf "rt u /tmp/*.zip binary-storage/"
            }
    }
    catch (e) {
        echo 'failed'

        // Since we're catching the exception in order to report on it,
        // we need to re-throw it, to ensure that the build is marked as failed
        throw e
    }
    finally {
        def currentResult = currentBuild.result ?: 'SUCCESS'
        if (currentResult == 'UNSTABLE') {
            echo 'job is UNSTABLE'
        }

        def previousResult = currentBuild.getPreviousBuild()?.result
        if (previousResult != null && previousResult != currentResult) {
            echo 'This will run only if the state of the Pipeline has changed'
            echo 'For example, if the Pipeline was previously failing but is now successful'
        }

            echo 'sending an Email...'
     
//            emailext body: "A Test EMail with result ${currentResult}", recipientProviders: [$class: 'DefaultRecipients'], subject: 'Test'
            cleanWs()
    }
 }
